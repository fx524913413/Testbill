package com.ruijie.spl.billingEngine.billing.entity;

import com.ruijie.spl.billingEngine.billing.dataEnum.SexEnum;
import com.ruijie.spl.billingEngine.billing.dataEnum.UserStateEnum;

import javax.persistence.*;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;
import java.util.UUID;

/**
 * Created by Administrator on 2017/8/31.
 * 用户表（名字暂替UserInfo）
 */
@Entity
@Table(name = "Person_Table")
public class PersonEntity {
    private UUID person_uuid;
    private String password;
    private Integer personId;
    private String firstName;
    private String lastName;
    private int age;
    private Set<TariffStrategyEntity> tariffStrategies;
    private LocalDateTime nextBillingTime;
    private Set<NormalAccountInfoEntity> normalAccounts;
    private Set<PeriodAccountInfoEntity> periodAccounts;
    private LocalDateTime createTime;
    private LocalDateTime lastUpdateTime;
    private UserStateEnum userState;
    private SexEnum userSex;

    /*用户的唯一标识，用户表的主键，自动生成*/
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "person_UUID")
    public UUID getPerson_uuid() {
        return person_uuid;
    }

    public void setPerson_uuid(UUID person_uuid) {
        this.person_uuid = person_uuid;
    }

    @Column(name = "password")
    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    /*用户关联的通常账户，一对多关系
    * 级联关系为：当删除用户时，删除该用户下的所有账户*/
    @OneToMany(cascade = {CascadeType.REMOVE, CascadeType.PERSIST}, targetEntity = NormalAccountInfoEntity.class, mappedBy = "personRelation", fetch = FetchType.LAZY)
    public Set<NormalAccountInfoEntity> getNormalAccounts() {
        if (normalAccounts == null)
            normalAccounts = new HashSet<>();
        return normalAccounts;
    }

    public void setNormalAccounts(Set<NormalAccountInfoEntity> normalAccounts) {
        this.normalAccounts = normalAccounts;
    }

    @OneToMany(cascade = {CascadeType.PERSIST, CascadeType.REMOVE}, targetEntity = PeriodAccountInfoEntity.class, mappedBy = "personRelation")
    public Set<PeriodAccountInfoEntity> getPeriodAccounts() {
        if (periodAccounts == null)
            periodAccounts = new HashSet<>();
        return periodAccounts;
    }

    public void setPeriodAccounts(Set<PeriodAccountInfoEntity> periodAccounts) {
        this.periodAccounts = periodAccounts;
    }

    @Column(name = "createTime")
    public LocalDateTime getCreateTime() {
        return createTime;
    }

    public void setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
    }

    @Column(name = "lastUpdateTime")
    public LocalDateTime getLastUpdateTime() {
        return lastUpdateTime;
    }

    public void setLastUpdateTime(LocalDateTime lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
    }

    /*用户的状态，枚举量：正常、暂停*/
    @Column(name = "user_State")
    public UserStateEnum getUserState() {
        return userState;
    }

    public void setUserState(UserStateEnum userState) {
        this.userState = userState;
    }

    /*用户的性别，枚举量：男、女*/
    @Column(name = "user_Sex")
    public SexEnum getUserSex() {
        return userSex;
    }

    public void setUserSex(SexEnum userSex) {
        this.userSex = userSex;
    }

    @Column(name = "person_Id")
    public Integer getPersonId() {
        return personId;
    }

    public void setPersonId(Integer personId) {
        this.personId = personId;
    }

    @Column(name = "first_Name")
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    @Column(name = "lastName")
    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    @Column(name = "age")
    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    /*用户关联的资费策略集合*/
    @Column(name = "rules_Relation")
    @ManyToMany(targetEntity = TariffStrategyEntity.class)
    @JoinTable(name = "person_tariffStrategy_table")
    public Set<TariffStrategyEntity> getTariffStrategies() {
        if (tariffStrategies == null)
            tariffStrategies = new HashSet<>();
        return tariffStrategies;
    }

    public void setTariffStrategies(Set<TariffStrategyEntity> tariffStrategies) {
        this.tariffStrategies = tariffStrategies;

    }

    @Column(name = "nextBilling_Time")
    public LocalDateTime getNextBillingTime() {
        return nextBillingTime;
    }

    public void setNextBillingTime(LocalDateTime nextBillingTime) {
        this.nextBillingTime = nextBillingTime;
    }
}
